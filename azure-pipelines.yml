
trigger:
  - master

variables:
  manylinux_cuda: 'sameli/manylinux2014_x86_64_cuda_11'

jobs:
  # - job: 'PackageWindows' 
  
  #   strategy:
  #     matrix:
  #       windows:
  #         imageName: 'windows-latest'

  #   pool: 
  #     vmImage: $(imageName)
    
  #   steps:
  #     - task: UsePythonVersion@0
  #       displayName: Get Python for Python tools.
  #       inputs:
  #         versionSpec: '3.7'
  #         addToPath: true
  #       name: pyTools
      
  #     - script: python -m pip install --upgrade pip tox
  #       displayName: Install Python-based tools.

  #     - task: Cache@2
  #       inputs:
  #         key: 'CacheExternalArrayFire-$(imageName)'
  #         path: '$(System.DefaultWorkingDirectory)\external\arrayfire'

  #     - script: tox -vvvv
  #       displayName: run tox

  #     - task: PublishBuildArtifacts@1
  #       inputs:
  #         PathtoPublish: '$(Build.SourcesDirectory)\dist'
  #         ArtifactName: 'compute-$(imageName)'
  #         publishLocation: 'Container'
  #       displayName: archiving compute-$(imageName)

  - job: 'PackageMac' 
  
    strategy:
      matrix:
        mac:
          imageName: 'macOS-11'
    pool: 
      vmImage: $(imageName)
    
    steps:
      - task: UsePythonVersion@0
        displayName: Get Python for Python tools.
        inputs:
          versionSpec: '3.9'
          addToPath: true
        name: pyTools

      - script: $(pyTools.pythonLocation)/bin/python3 -m pip install --upgrade pip tox
        displayName: Install Python-based tools.

      - task: Cache@2
        inputs:
          key: 'CacheExternalArrayFire-$(imageName)'
          path: '$(System.DefaultWorkingDirectory)/external/arrayfire'

      - script: tox -vvvv
        displayName: run tox

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.SourcesDirectory)/dist'
          ArtifactName: 'compute-$(imageName)'
          publishLocation: 'Container'
        displayName: archiving compute-$(imageName)

  # - job: 'PackageManyLinux' 

  #   steps:       
  #     - script: |
  #         docker run --rm \
  #           -v $PWD:/io \
  #           $(manylinux_cuda) \
  #           /io/entrypoint-build-wheels.sh
  #       displayName: Build wheels

  #     - task: PublishBuildArtifacts@1
  #       inputs:
  #         PathtoPublish: '$(Build.SourcesDirectory)/dist'
  #         ArtifactName: 'shapelets_compute'
  #         publishLocation: 'Container'
  #       displayName: archiving shapelets_compute
