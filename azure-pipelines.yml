
trigger:
  - master

variables:
  manylinux_cuda: 'sameli/manylinux2014_x86_64_cuda_11'

jobs:
  - job: 'PackageWindows' 
  
    strategy:
      matrix:
        windows:
          imageName: 'windows-latest'

    pool: 
      vmImage: $(imageName)

    variables:
      builddate: $[format('{0:yyMMdd}', pipeline.startTime)]
    steps:
      - checkout: self
        submodules: true
        persistCredentials: true

      - script: git tag -f $(nightly-version)".dev"$(builddate)
        displayName: "git tag"

      - script: git describe --tags --dirty --always
        displayName: "git describe"

      - task: UsePythonVersion@0
        displayName: Get Python for Python tools.
        inputs:
          versionSpec: '3.7'
          addToPath: false
        name: pyTools
      
      - script: $(pyTools.pythonLocation)\python3 -m pip install --upgrade pip tox twine -vvv
        displayName: Install Python-based tools.

      - task: Cache@2
        inputs:
          key: 'CacheExternalArrayFire-$(imageName)'
          path: '$(System.DefaultWorkingDirectory)\external\arrayfire'

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.7'
          architecture: 'x64'
        displayName: Python 3.7.
      
      - script: tox -e py37 -vvvv
        displayName: run tox 3.7

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.8'
          architecture: 'x64'
        displayName: Use cached Python 3.8 for tests.

      - script: tox -e py38 -vvvv
        displayName: run tox 3.8

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.9'
          architecture: 'x64'
        displayName: Use cached Python 3.9 for tests.

      - script: tox -e py39 -vvvv
        displayName: run tox 3.9

      # - script: tox -vvvv
      #   displayName: run tox

      # - script: |
      #     certutil -hashfile "$(Build.SourcesDirectory)\dist\*.*" SHA256 > "$(Build.SourcesDirectory)\dist\server.sha"
      #   displayName: "Calculate sha"

      # - script: |
      #     openssl sha256 $(Build.SourcesDirectory)\dist\*.* > $(Build.SourcesDirectory)\dist\server-windows.sha
      #   displayName: "Calculate sha"

      - powershell: |
          $files = Get-ChildItem '$(Build.SourcesDirectory)\dist\' | 
          Foreach-Object {$_.Name}
          echo $files

          $Data=$files.split(" ")
          
          foreach($item in $Data){
            openssl sha256 $(Build.SourcesDirectory)\dist\$item > $(Build.SourcesDirectory)\dist\$item.sha

          }
        displayName: "Calculate sha"

      - script: |
          az storage blob upload-batch --account-name $(account-name) --account-key $(account-key) --destination compute --source $(Build.SourcesDirectory)\dist\
        displayName: "Upload Package"

      - script: |
          twine upload $(Build.SourcesDirectory)/dist/*.whl --repository-url $(repository_url_test) --verbose --u __token__ --p $(pypi_token_test)
        displayName: "Upload Package to PyPI"

      # - task: PublishBuildArtifacts@1
      #   inputs:
      #     PathtoPublish: '$(Build.SourcesDirectory)\dist'
      #     ArtifactName: 'compute-$(imageName)'
      #     publishLocation: 'Container'
      #   displayName: archiving compute-$(imageName)

  - job: 'PackageMac' 
  
    strategy:
      matrix:
        mac:
          imageName: 'macOS-10.15'
    pool: 
      vmImage: $(imageName)
    
    steps:
      - checkout: self
        submodules: true
        persistCredentials: true

      - script: git tag -f $(nightly-version).dev`date +%y%m%d`
        displayName: "git tag"

      - script: git describe --tags --dirty --always
        displayName: "git describe"

      - task: UsePythonVersion@0
        displayName: Get Python for Python tools.
        inputs:
          versionSpec: '3.7'
          addToPath: false
        name: pyTools

      - script: $(pyTools.pythonLocation)/bin/python3 -m pip install --upgrade pip tox twine
        displayName: Install Python-based tools.

      - task: Cache@2
        inputs:
          # key: 'CacheExternalArrayFire-$(imageName)'
          key: 'CacheExternalArrayFire-macOS-latest'
          path: '$(System.DefaultWorkingDirectory)/external/arrayfire'

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.7'
          architecture: 'x64'
        displayName: Python 3.7.
      
      - script: $(pyTools.pythonLocation)/bin/tox -e py37 -vvvv
        displayName: run tox 3.7

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.8'
          architecture: 'x64'
        displayName: Use cached Python 3.8 for tests.

      - script: $(pyTools.pythonLocation)/bin/tox -e py38 -vvvv
        displayName: run tox 3.8

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.9'
          architecture: 'x64'
        displayName: Use cached Python 3.9 for tests.

      - script: $(pyTools.pythonLocation)/bin/tox -e py39 -vvvv
        displayName: run tox 3.9


      # - script: |
      #     sudo port install coreutils
      #   displayName: "Install sha256sum"


      - script: |
          find '$(Build.SourcesDirectory)/dist' -exec bash -c "openssl sha256 '{}' > '{}'.sha" \;
        displayName: "Calculate sha"

      - script: |
          az storage blob upload-batch --account-name $(account-name) --account-key $(account-key) --destination 'compute' --source '$(Build.SourcesDirectory)/dist'
        displayName: "Upload Package"

      - script: |
          twine upload $(Build.SourcesDirectory)/dist/*.whl --repository-url $(repository_url) --verbose --u __token__ --p $(pypi_token)
        displayName: "Upload Package to PyPI"

      # - task: PublishBuildArtifacts@1
      #   inputs:
      #     PathtoPublish: '$(Build.SourcesDirectory)/dist'
      #     ArtifactName: 'compute-$(imageName)'
      #     publishLocation: 'Container'
      #   displayName: archiving compute-$(imageName)

  - job: 'PackageManyLinux' 

    steps:       
      - checkout: self
        submodules: true
        persistCredentials: true

      - script: git tag -f $(nightly-version).dev`date +%y%m%d`
        displayName: "git tag"

      - script: git describe --tags --dirty --always
        displayName: "git describe"

      - script: |
          docker run --rm \
            -v $PWD:/io \
            $(manylinux_cuda) \
            /io/entrypoint-build-wheels.sh
        displayName: Build wheels

      - script: |
          sudo find '$(Build.SourcesDirectory)/dist' -exec bash -c "sha256sum '{}' > '{}'.sha" \;
        displayName: "Calculate sha"

      # - script: |
      #     az storage blob upload-batch --account-name $(account-name) --account-key $(account-key) --destination 'compute' --source '$(Build.SourcesDirectory)/dist'
      #   displayName: "Upload Package"

      - script: |
          python -m pip install twine
        displayName: "Install twine"

      - script: |
          twine upload $(Build.SourcesDirectory)/dist/*.whl --repository-url $(repository_url_test) --verbose --u __token__ --p $(pypi_token_test)
        displayName: "Upload Package to PyPI"

      # - task: PublishBuildArtifacts@1
      #   inputs:
      #     PathtoPublish: '$(Build.SourcesDirectory)/dist'
      #     ArtifactName: 'shapelets_compute'
      #     publishLocation: 'Container'
      #   displayName: archiving shapelets_compute
