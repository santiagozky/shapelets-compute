
trigger:
  - master

variables:
  manylinux_cuda: 'sameli/manylinux2014_x86_64_cuda_11'

jobs:
  - job: 'PackageWindows' 
  
    strategy:
      matrix:
        windows:
          imageName: 'windows-latest'

    pool: 
      vmImage: $(imageName)
    
    steps:
      - task: UsePythonVersion@0
        displayName: Get Python for Python tools.
        inputs:
          versionSpec: '3.7'
          addToPath: false
        name: pyTools
      
      - script: $(pyTools.pythonLocation)\python3 -m pip install --upgrade pip tox -vvv
        displayName: Install Python-based tools.

      - task: Cache@2
        inputs:
          key: 'CacheExternalArrayFire-$(imageName)'
          path: '$(System.DefaultWorkingDirectory)\external\arrayfire'

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.7'
          architecture: 'x64'
        displayName: Python 3.7.
      
      - script: tox -e py37 -vvvv
        displayName: run tox 3.7

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.8'
          architecture: 'x64'
        displayName: Use cached Python 3.8 for tests.

      - script: tox -e py38 -vvvv
        displayName: run tox 3.8

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.9'
          architecture: 'x64'
        displayName: Use cached Python 3.9 for tests.

      - script: tox -e py39 -vvvv
        displayName: run tox 3.9

      # - script: tox -vvvv
      #   displayName: run tox

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.SourcesDirectory)\dist'
          ArtifactName: 'compute-$(imageName)'
          publishLocation: 'Container'
        displayName: archiving compute-$(imageName)

  - job: 'PackageMac' 
  
    strategy:
      matrix:
        mac:
          imageName: 'macOS-10.15'
    pool: 
      vmImage: $(imageName)
    
    steps:
      - task: UsePythonVersion@0
        displayName: Get Python for Python tools.
        inputs:
          versionSpec: '3.7'
          addToPath: false
        name: pyTools

      - script: $(pyTools.pythonLocation)/bin/python3 -m pip install --upgrade pip tox
        displayName: Install Python-based tools.

      - task: Cache@2
        inputs:
          # key: 'CacheExternalArrayFire-$(imageName)'
          key: 'CacheExternalArrayFire-macOS-latest'
          path: '$(System.DefaultWorkingDirectory)/external/arrayfire'

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.7'
          architecture: 'x64'
        displayName: Python 3.7.
      
      - script: $(pyTools.pythonLocation)/bin/tox -e py37 -vvvv
        displayName: run tox 3.7

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.8'
          architecture: 'x64'
        displayName: Use cached Python 3.8 for tests.

      - script: $(pyTools.pythonLocation)/bin/tox -e py38 -vvvv
        displayName: run tox 3.8

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.9'
          architecture: 'x64'
        displayName: Use cached Python 3.9 for tests.

      - script: $(pyTools.pythonLocation)/bin/tox -e py39 -vvvv
        displayName: run tox 3.9

      - script: ls -l 
        displayName: ls current

      - script: ls -l $(Build.SourcesDirectory)/dist
        displayName: ls dist

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.SourcesDirectory)/dist'
          ArtifactName: 'compute-$(imageName)'
          publishLocation: 'Container'
        displayName: archiving compute-$(imageName)

  - job: 'PackageManyLinux' 

    steps:       
      - script: |
          docker run --rm \
            -v $PWD:/io \
            $(manylinux_cuda) \
            /io/entrypoint-build-wheels.sh
        displayName: Build wheels

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.SourcesDirectory)/dist'
          ArtifactName: 'shapelets_compute'
          publishLocation: 'Container'
        displayName: archiving shapelets_compute
