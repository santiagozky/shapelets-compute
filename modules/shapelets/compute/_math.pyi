from typing import overload
from .__basic_typing import ArrayLike
from ._array_obj import ShapeletsArray

def absolute(array_like: ArrayLike) -> ShapeletsArray: ...
def add(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def angle_deg(array_like: ArrayLike) -> ShapeletsArray: ...
def angle(array_like: ArrayLike) -> ShapeletsArray: ...
def arccos(array_like: ArrayLike) -> ShapeletsArray: ...
def arccosh(array_like: ArrayLike) -> ShapeletsArray: ...
def arcsin(array_like: ArrayLike) -> ShapeletsArray: ...
def arcsinh(array_like: ArrayLike) -> ShapeletsArray: ...
def arctan(array_like: ArrayLike) -> ShapeletsArray: ...
def arctan2(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def arctanh(array_like: ArrayLike) -> ShapeletsArray: ...
def bitwise_and(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def bitwise_or(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def bitwise_xor(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def cbrt(array_like: ArrayLike) -> ShapeletsArray: ...
def ceil(array_like: ArrayLike) -> ShapeletsArray: ...
def clip(array_like: ArrayLike, lo: ArrayLike = None, up: ArrayLike = None) -> ShapeletsArray: ...
def conj(array_like: ArrayLike) -> ShapeletsArray: ...
def conjugate(array_like: ArrayLike) -> ShapeletsArray: ...
@overload
def complex(array_like: ArrayLike) -> ShapeletsArray: ...
@overload
def complex(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def cos(array_like: ArrayLike) -> ShapeletsArray: ...
def cosh(array_like: ArrayLike) -> ShapeletsArray: ...
def deg2rad(array_like: ArrayLike) -> ShapeletsArray: ...
def degrees(array_like: ArrayLike) -> ShapeletsArray: ...
def divide(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def erf(array_like: ArrayLike) -> ShapeletsArray: ...
def erfc(array_like: ArrayLike) -> ShapeletsArray: ...
def exp(array_like: ArrayLike) -> ShapeletsArray: ...
def exp2(array_like: ArrayLike) -> ShapeletsArray: ...
def expm1(array_like: ArrayLike) -> ShapeletsArray: ...
def fabs(array_like: ArrayLike) -> ShapeletsArray: ...
def factorial(array_like: ArrayLike) -> ShapeletsArray: ...
def fix(array_like: ArrayLike) -> ShapeletsArray: ...
def floor_divide(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def floor(array_like: ArrayLike) -> ShapeletsArray: ...
def hypot(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def imag(array_like: ArrayLike) -> ShapeletsArray: ...
def left_shift(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def lgamma(array_like: ArrayLike) -> ShapeletsArray: ...
def log(array_like: ArrayLike) -> ShapeletsArray: ...
def log10(array_like: ArrayLike) -> ShapeletsArray: ...
def log1p(array_like: ArrayLike) -> ShapeletsArray: ...
def log2(array_like: ArrayLike) -> ShapeletsArray: ...
def mod(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def multiply(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def negative(array_like: ArrayLike) -> ShapeletsArray: ...
def positive(array_like: ArrayLike) -> ShapeletsArray: ...
def power(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def rad2deg(array_like: ArrayLike) -> ShapeletsArray: ...
def radians(array_like: ArrayLike) -> ShapeletsArray: ...
def real(array_like: ArrayLike) -> ShapeletsArray: ...
def reciprocal(array_like: ArrayLike) -> ShapeletsArray: ...
def rem(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def right_shift(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def rint(array_like: ArrayLike) -> ShapeletsArray: ...
def root(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def round(array_like: ArrayLike, decimals: int = 0) -> ShapeletsArray: ...
def rsqrt(array_like: ArrayLike) -> ShapeletsArray: ...
def sigmoid(array_like: ArrayLike) -> ShapeletsArray: ...
def sign(array_like: ArrayLike) -> ShapeletsArray: ...
def signbit(array_like: ArrayLike) -> ShapeletsArray: ...
def sin(array_like: ArrayLike) -> ShapeletsArray: ...
def sinh(array_like: ArrayLike) -> ShapeletsArray: ...
def sqrt(array_like: ArrayLike) -> ShapeletsArray: ...
def square(array_like: ArrayLike) -> ShapeletsArray: ...
def substract(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def tan(array_like: ArrayLike) -> ShapeletsArray: ...
def tanh(array_like: ArrayLike) -> ShapeletsArray: ...
def tgamma(array_like: ArrayLike) -> ShapeletsArray: ...
def true_divide(left: ArrayLike, right: ArrayLike) -> ShapeletsArray: ...
def trunc(array_like: ArrayLike) -> ShapeletsArray: ...
